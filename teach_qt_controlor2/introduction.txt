三个基类：
QMainWindow
包含了QWidget类 和QMenuBar类(菜单栏)以及QToolBar类(工具栏)和QStatusBar类(状态栏)
QWidget
QDialog vsQWidget ：QDialog没有最小化、最大化

qt5的下拉菜单有一个小bug，不支持直接输入中文，可以在txt里面输入中文复制黏贴 
ctrl+滚轮可以将字体放大放小

坐标：
标题栏下左上角为0 ---宽 |高

setupui可以生成代码 crtl+点击可以查看(之前需要构建一下)
Ui_MainWindow类下的方法setupUi
ui是一个MainWindow类的指针,MainWindow类公有继承于Ui_MainWindow类，也公有继承于QMainWindow，
而setupui是Ui_MainWindow类的方法，又因为派生类可以调用基类的方法，所以
有ui->setupUi(this) this指的是QMainWindow* MainWindow 对象的指针，this指的是ui文件窗口 即主窗口
/*点开ui发现
namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent = nullptr);
    ~MainWindow();

private:
    Ui::MainWindow *ui; //ui是一个MainWindow类的指针
};


--------点开setupui发现
namespace Ui {
    class MainWindow: public Ui_MainWindow {};
} // namespace Ui
*/

加入空间后构建一下然后crtl+点击setupui可以发现在Ui_MainWindow类中多了
QPushButton *pushButton;类指针
根据可视化的控件操作自动生成
 pushButton = new QPushButton(centralWidget);//传入参数为explicit QPushButton(QWidget *parent = nullptr);
 pushButton->setObjectName(QString::fromUtf8("pushButton"));
 pushButton->setGeometry(QRect(70, 60, 93, 28));

qmake+构建可以刷新控件信息


 ui->pushButton->setText("按键一");//这样也可以设置pushButton的按键名
    //ui是一个MainWindow类的指针,MainWindow类公有继承于Ui_MainWindow类，Ui_MainWindow类下有pushButton的类指针，
    //pushButton类公有继承父控件QAbstractButton类，QAbstractButton类里面有setText()方法
	//那么，什么是派生控件类特有的成员函数呢？待解决

对话框：种类
模态 ：子窗口始终为活跃不能切换  dlg->exec();子窗口始终为活跃不能切换 ，变为模态窗口
半模态：子窗口始终为活跃可以看到父窗口变化dlg->setModal(true)
非模态：子窗口可以随时取消活跃切换为父窗口

Qt优势：
信号与槽：对象与对象进行通信
槽函数相当于Win32里面的回调函数
系统的信号与槽都是绑定好的 自己写的槽函数要绑定信号
1.自动关联模式
信号：
右键控件--转到槽
选择QAbstractButton类的click()信号    像win32里面的WM_LBUTTONDOWN 接收信号
这样在mainwindow.cpp下生成SLOT()槽函数：
void MainWindow::on_pushButton_clicked()
{
    ui->lineEdit->setText("按钮已经按下");//收到一个按键类型的信号，响应一个槽函数
}
并且在mainwindow.h下的class MainWindow中生成
private slots://待解决，为什么private后面还能有值，是变量吗？还是修饰符？
    void on_pushButton_clicked();

mainwindow.h 下的class MainWindow中有一个宏Q_OBJECT，是响应信号与槽的条件

2.自己定义类信号的时候需要connect绑定信号
ctrl+c，ctrl+v 可以实现控件的复制

a.首先在mainwindow.h中的class MainWindow下加入
signals://待解决 为什么是signals，不是privat或是public？如果是宏的话，属性是private还是public？
    void pushButton2Signal();//自定义信号
b.在private slot中	添加信号
void pushButton2Slot();//自定义槽函数，右键refactor在mainwindow.cpp中添加定义
这样就在mainwindow.cpp中出现了
点击pushButton2，选择槽函数
通过emit函数发送信号 相当于win32里面的sendmessage
void MainWindow::on_pushButton_2_clicked()
{
    emit pushButton2Signal();
}
bb.方式二：
connect(ui->pushButton_2,SIGNAL(clicked()),
            this,SLOT(pushButton2Slot()));

//关闭按钮
    connect(ui->pushButton_3,&QPushButton::clicked,/*回调函数*/
            this,&QMainWindow::close/*qt自身槽函数*/);



c.可视化操作关联信号与槽
按下f4或者对应的按钮
接地(根据需求，也可以连接其他控件)
勾选 显示从QWidget继承的信号与槽 选择close()
f3退出或者对应按钮
维护的话是前面两种方便一点
例如：通过滑动水平条改变转轴
控件1 horizontalSlider 控件2 dial
选择信号slidermoved()
槽函数 setvalue()

发送者跟接收者都是qt自身的函数·	

双击改按钮名字

设置按钮状态变量进行按钮状态切换
tool button

RC_ICOINS 可以修改窗口图标
ALT+Shift+R 快速预览